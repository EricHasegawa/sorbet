same-file/b.rb:6: `A::Foo` resolves but its package is not imported https://srb.help/3718
     6 |  sig {returns(A::Foo)}
                       ^^^^^^
    a/__package.rb:3: Exported from package here
     3 |class A < PackageSpec
        ^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    same-file/__package.rb:3: Inserted `import A`
     3 |class B < PackageSpec
                             ^

same-file/b.rb:8: `A::Foo` resolves but its package is not imported https://srb.help/3718
     8 |    x = A::Foo.new
                ^^^^^^
    a/__package.rb:3: Exported from package here
     3 |class A < PackageSpec
        ^^^^^^^^^^^^^^^^^^^^^

different-files/c2.rb:6: `A::Foo` resolves but its package is not imported https://srb.help/3718
     6 |  sig{returns(A::Foo)}
                      ^^^^^^
    a/__package.rb:3: Exported from package here
     3 |class A < PackageSpec
        ^^^^^^^^^^^^^^^^^^^^^

different-files/c1.rb:6: `A::Foo` resolves but its package is not imported https://srb.help/3718
     6 |  sig{returns(A::Foo)}
                      ^^^^^^
    a/__package.rb:3: Exported from package here
     3 |class A < PackageSpec
        ^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    different-files/__package.rb:3: Inserted `import A`
     3 |class C < PackageSpec
                             ^
Errors: 4

====================

# typed: strict

class B < PackageSpec
  import A
end

====================

# typed: strict

class C < PackageSpec
  import A
end
